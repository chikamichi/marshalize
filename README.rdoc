= Marshalize

This Rails plugin provides serialization using Marshal[http://ruby-doc.org/core/classes/Marshal.html] in the same way Rails provides builtin serialization using YAML. In a model, just do
  class Robot < ActiveRecord::Base
    marshalize :features
  end
and your app will automagically handle the +features+ attribute using Marshal, dumping when saving to the database, loading when fetching from it.

You can register any kind object (not just arrays and hashes...). Be aware that Marshal defines a binary format, which may change in incoming Ruby releases and is currently not portable outside the Ruby scripting world. For a portable yet slower alternatives, you may try JSON or YML serializers.

== Example

Marshalize currently supports text rows to store binary Marshal data. This limitation should not last long and blob rows are on the way.

  $ script/generate scaffold Robot name:string parameters:text features:text status:text

  class Robot < ActiveRecord::Base
    
    marshalize :parameters               # The "parameters" attribute will be saved as binary data
    
    marshalize :features,  RobotFeature  # You can define what kind of object is to be marshalized
                                         # An error will be raised if another class is provided for
                                         # this attribute
    
    serialize  :status,    Array         # Marshalization plays well with YAML classic serialization
  
  end

== Installation

=== recommended -- as a local gem dependency:

In your <tt>environment.rb</tt>, inside the <tt>Rails::Initializer</tt>, add the following line:
  
  config.gem "chikamichi-marshalize", :lib => 'marshalize', :source => 'http://gems.github.com'

Then run <tt>rake gems:install</tt> to fetch the plugin in.

=== as a plugin:

In your Rails application root directory:

  script/plugin install git://github.com/chikamichi/marshalize.git

=== as an standalone gem:

If necessary:
  
  gem sources -a http://gems.github.com

Then:

  sudo gem install chikamichi-marshalize

== Testing

A very simple test case is provided as <tt>test/marshalize_test.rb</tt>. Run <tt>rake test</tt>.

== TODO

* some +super+ stuff to avoid harsh overriding of ActiveRecord internals
* manage +blobs+, not just +text+ rows (buffer limitations)
* +rake+ tasks to manage marshalized data recovering in case Marshal went astray (say, a new version breaking things down?) 

== License

Released under the WTFPL (see COPYING).
